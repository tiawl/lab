# Quality of Life {{{1

# sets the delay between prefix and command
set-option -s escape-time 5

# allow arrow keys to be used immediatly after changing window
set-option -g repeat-time 0

# don't rename windows automatically
set-option -g allow-rename off
set-option -g automatic-rename on
set-option -g automatic-rename-format ''

# Enable names for panes
set-option -g pane-border-status top
set-option -g pane-border-format ' [#P] '

# base index
set-option -g base-index 1
set-option -g pane-base-index 1

# status line needs this feature to be functionnal
set-option -g renumber-windows on

# more lines in copy mode
set-option -g history-limit 100000

# default shell
set-option -g default-shell '/bin/bash'

# }}}
# Mappings {{{1

# bash shortcuts enabled
set-option -g xterm-keys on

# Unbind prefix
set-option -g prefix None
unbind-key C-b

# tree
unbind-key s
unbind-key w
bind-key -n 'M-!' choose-session -N -Z

# command prompt
unbind-key :
bind-key -n 'M-:' command-prompt

# keys list
unbind-key ?
bind-key -n 'M-?' list-keys

#   COPY Mode {{{2

# to copy, left click and drag to highlight text in yellow,
# once you release left click yellow text will disappear and will
# automatically be available in clibboard
set-option -g mouse on
set-option -g mode-keys vi

# update default binding of COPY mode to match with VIM visual mode
unbind-key [
unbind-key ]

# copy mode
bind-key -n 'M-v' copy-mode

# update default binding of visual selection to match with VIM visual mode
unbind-key -T copy-mode-vi v
unbind-key -T copy-mode-vi Space
bind-key -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

# copy
bind-key -T copy-mode-vi 'y' send -X copy-selection

# paste
bind-key -n 'M-p' paste-buffer

#   }}}
#   Panes {{{2

# splitting panes
unbind-key %
unbind-key '"'
bind-key -n 'M-d' run-shell 'tmux split-window -h'
bind-key -n 'M-s' run-shell 'tmux split-window -v'

# switching panes
unbind-key Left
unbind-key Right
unbind-key Up
unbind-key Down
bind-key -n 'M-Left' select-pane -L
bind-key -n 'M-Right' select-pane -R
bind-key -n 'M-Up' select-pane -U
bind-key -n 'M-Down' select-pane -D

# swap panes
bind-key -n 'M-m' command-prompt -I "" { swap-pane -t "%%"; select-pane -t "%%" }

# killing panes
unbind-key x
bind-key -n 'M-q' kill-pane

# switching layout
unbind-key Space
bind-key -n 'M-Enter' next-layout

# zooming in/out current pane
unbind-key z
bind-key -n 'M-f' resize-pane -Z

#   }}}
#   Windows {{{2

# new window
unbind-key c
bind-key -n 'M-w' run-shell 'tmux new-window'

# switching window
unbind-key n
unbind-key p
bind-key -n 'M-c' next-window
bind-key -n 'M-x' previous-window

# renaming window
unbind-key ,
bind-key -n 'M-W' command-prompt -I "#W" { rename-window "%%" }

#   }}}
#   Sessions {{{2

# new session
bind-key -n 'M-<' command-prompt -p "(new-session)" {
  new-session -A -s '%%'
}

# detach session
unbind-key d
bind-key -n 'M-z' detach-client

# rename session
unbind-key $
bind-key -n 'M->' command-prompt -I "#S" { rename-session "%%" }

# kill session
bind-key -n 'M-k' command-prompt -p '(kill-session)' { kill-session -t '%%' }

#   }}}
# }}}
# Style {{{1

# enable 256 colors
set-option -g default-terminal xterm-256color

# message style
set-option -g message-style "fg=colour$GRAY_900,bg=colour$WHITE,bold"

# set copy selection style and cursorline selection style
set-option -g mode-style "fg=colour$GRAY_900,bg=colour$WHITE,bold"

# set search style in copy mode
set-option -g copy-mode-match-style "fg=colour$THEME,bg=colour$GRAY_900,bold"
set-option -g copy-mode-current-match-style "fg=colour$GRAY_700,bg=colour$GRAY_900,bold"

# set inactive/active panes styles
set-option -g window-style "fg=colour$GRAY_500"
set-option -g window-active-style "fg=colour$GRAY_500,bg=colour$GRAY_900"
set-option -g pane-active-border-style "fg=colour$THEME,bg=colour$GRAY_900"

set-option -g pane-border-lines 'heavy'

# statusline
set-option -g status-style "fg=colour$GRAY_900,bg=colour$THEME,bold"
set-option -g status-format[0] "▌#{session_name}\
#{?#{e|==:#{active_window_index},1},▐, }#{W:#{?window_active,\
#[fg=colour$THEME#,bg=colour$GRAY_900]#{?#{e|==:#{window_index},1},,▌}\
#{?#{e|>:#{w:window_name},0},#{window_name},#{window_index}\
}▐,#[fg=colour$GRAY_900#,bg=colour$THEME]\
#{?#{||:#{e|==:#{e|+:#{active_window_index},1},#{window_index}},\
#{e|==:#{window_index},1}},, }\
#{?#{e|>:#{w:window_name},0},#{window_name},#{window_index}\
}}\
}"

# message style
set-option -g message-style "fg=colour$GRAY_900,bg=colour$WHITE,bold"

# }}}
# Plugins {{{1

set-option -g @plugin 'tmux-plugins/tmux-resurrect'
bind-key -n 'M-y' 'run-shell "$(tmux show-options -gqv @resurrect-save-script-path)"'
bind-key -n 'M-u' 'run-shell "$(tmux show-options -gqv @resurrect-restore-script-path)"'
set-hook -g client-detached 'run-shell "$(tmux show-options -gqv @resurrect-save-script-path)"'
set-option -g @resurrect-processes 'tmux'
set-option -g @resurrect-dir "$HOME/.tmux/resurrect"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run-shell '~/.tmux/plugins/tpm/tpm'

# }}}
